text_sensor:
# 에어컨 텍스트 센서
  - platform: homeassistant
    entity_id: $climate 
    id: aircon_mode
    on_value:      
      - lvgl.label.update: 
          id: aircon_mode_text
          text:
            format: "%s"
            args: [ x.c_str() ]
      - if:
          condition:
            lambda: 'return id(aircon_mode).state == "heat_cool";'
          then:
            - lvgl.dropdown.update:
                id: aircon_mode_set
                selected_index: 0
            - lvgl.label.update: 
                id: aircon_mode_text
                text: "#FFFFFF Auto#"
      - if:
          condition:
            lambda: 'return id(aircon_mode).state == "heat";'
          then:
            - lvgl.dropdown.update:
                id: aircon_mode_set
                selected_index: 1
            - lvgl.label.update: 
                id: aircon_mode_text
                text: "#FFA500 Heat#"    
      - if:
          condition:
            lambda: 'return id(aircon_mode).state == "cool";'
          then:
            - lvgl.dropdown.update:
                id: aircon_mode_set
                selected_index: 2
            - lvgl.label.update: 
                id: aircon_mode_text
                text: "#2F8CD8 Cool#"
      - if:
          condition:
            lambda: 'return id(aircon_mode).state == "dry";'
          then:
            - lvgl.dropdown.update:
                id: aircon_mode_set
                selected_index: 3
            - lvgl.label.update: 
                id: aircon_mode_text
                text: "#2F8CD8 Dry#"
      - if:
          condition:
            lambda: 'return id(aircon_mode).state == "fan_only";'
          then:
            - lvgl.dropdown.update:
                id: aircon_mode_set
                selected_index: 4
            - lvgl.label.update: 
                id: aircon_mode_text
                text: "#00CED1 Fan#"
            
      - if:
          condition:
            lambda: 'return id(aircon_mode).state == "off";'
          then:
            - lvgl.dropdown.update:
                id: aircon_mode_set
                selected_index: 5  
            - lvgl.label.update: 
                id: aircon_mode_text
                text: "#FFFFFF Idle#"
            - lvgl.widget.hide: 
                id: aircon_run
          else:
            - lvgl.widget.show: 
                id: aircon_run

        
  - platform: homeassistant
    entity_id: $climate 
    attribute: fan_mode
    id: aircon_fan_mode
    on_value:
      - if:
          condition:
            lambda: 'return id(aircon_fan_mode).state == "diffuse";'
          then:
            - lvgl.dropdown.update:
                id: aircon_fan_mode_Set
                selected_index: 0            
      - if:
          condition:
            lambda: 'return id(aircon_fan_mode).state == "high";'
          then:
            - lvgl.dropdown.update:
                id: aircon_fan_mode_Set
                selected_index: 1
      - if:
          condition:
            lambda: 'return id(aircon_fan_mode).state == "medium";'
          then:
            - lvgl.dropdown.update:
                id: aircon_fan_mode_Set
                selected_index: 2
      - if:
          condition:
            lambda: 'return id(aircon_fan_mode).state == "low";'
          then:
            - lvgl.dropdown.update:
                id: aircon_fan_mode_Set
                selected_index: 3

sensor:
#에어컨 센서
  - platform: homeassistant
    entity_id: $climate 
    attribute: current_temperature
    id: aircon_now_temp
    accuracy_decimals: 1

  - platform: homeassistant
    entity_id: $climate 
    attribute: temperature
    id: aircon_set_temp
    accuracy_decimals: 0
    on_value:
      - lvgl.arc.update:
          id: aircon_set_temp_arc
          value: !lambda 'return x;'
      - lvgl.label.update:
          id: aircon_set_temp_text
          text:
            format: "%.0f°c"
            args: [ 'x' ]